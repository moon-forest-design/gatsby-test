{"version":3,"file":"component---src-templates-tag-template-js-ad0341dd48450add0159.js","mappings":"qLAiDA,UA5Ca,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IACR,EAA8BD,EAAKE,OAA3BC,EAAR,EAAQA,MACFC,EAAS,MAASH,EAAT,WADf,EAAeI,WACA,KACf,OACE,gBAAC,IAAD,CACEC,UAAWF,EACXG,gBAAe,MAAQN,EAAR,cAEf,0BACGE,EAAMK,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNC,EAAOD,EAAKC,KACVC,EAAUF,EAAKG,YAAfD,MACR,OACE,sBAAIE,IAAKH,GACP,gBAAC,KAAD,CAAMI,GAAE,SAAWJ,GAASC,QAKpC,gBAAC,KAAD,CAAMG,GAAG,SAAT","sources":["webpack://gatsby-starter-hello-world/./src/templates/tagTemplate.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, graphql } from \"gatsby\";\r\nimport Layout from '../components/layout';\r\n\r\nconst Tags = ({ pageContext, data }) => {\r\n  const { tag } = pageContext;\r\n  const { edges, totalCount } = data.allMdx;\r\n  const tagHeader = `タグ「${tag}」が付いた記事（${totalCount}件）`;\r\n  return (\r\n    <Layout\r\n      pageTitle={tagHeader}\r\n      pageDescription={`タグ「${tag}」が付いた記事リスト`}\r\n    >\r\n      <ul>\r\n        {edges.map(({ node }) => {\r\n          const slug = node.slug\r\n          const { title } = node.frontmatter\r\n          return (\r\n            <li key={slug}>\r\n              <Link to={`/blog/${slug}`}>{title}</Link>\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n      <Link to=\"/tags\">All tags</Link>\r\n    </Layout>\r\n  );\r\n};\r\nTags.propTypes = {\r\n  pageContext: PropTypes.shape({\r\n    tag: PropTypes.string.isRequired,\r\n  }),\r\n  data: PropTypes.shape({\r\n    allMdx: PropTypes.shape({\r\n      totalCount: PropTypes.number.isRequired,\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          node: PropTypes.shape({\r\n            frontmatter: PropTypes.shape({\r\n              title: PropTypes.string.isRequired,\r\n            }),\r\n            slug: PropTypes.string.isRequired,\r\n          }),\r\n        }).isRequired\r\n      ),\r\n    }),\r\n  }),\r\n};\r\nexport default Tags;\r\nexport const pageQuery = graphql`\r\n  query($tag: String) {\r\n    allMdx(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          slug\r\n          frontmatter {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["pageContext","data","tag","allMdx","edges","tagHeader","totalCount","pageTitle","pageDescription","map","node","slug","title","frontmatter","key","to"],"sourceRoot":""}